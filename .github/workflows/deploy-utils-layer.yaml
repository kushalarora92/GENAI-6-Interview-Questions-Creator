name: deploy-utils-layer

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'requirements.txt'

env:
  LAYER_ZIP_FILE: ai6-interview-utils-layer.zip
  PYTHON_VERSION: '3.9'
  LAYER_NAME: ai6-interview-utils-layer

jobs:
  deploy-utils-layer:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create layer package
        run: |
          mkdir -p layer/python
          
          cat > layer/requirements.txt << EOF
          langchain==0.3.18
          langchain-community==0.3.17
          langchain-core==0.3.35
          pypdf==5.3.0
          PyPDF2==3.0.1
          python-dotenv==1.0.1
          EOF
          
          pip install -r layer/requirements.txt --target layer/python
          
          cd layer/python
          find . -type d -name "__pycache__" -exec rm -rf {} +
          find . -type d -name "*.dist-info" -exec rm -rf {} +
          find . -type d -name "tests" -exec rm -rf {} +
          find . -type f -name "*.pyc" -delete
          find . -type f -name "*.pyo" -delete
          find . -type f -name "*.pyd" -delete
          
          echo "Layer package sizes:"
          du -h -d 1 .
          total_size=$(du -s . | cut -f1)
          echo "Total size in KB: $total_size"
          cd ../..

      - name: Create layer zip
        run: |
          cd layer
          zip -r ../${{ env.LAYER_ZIP_FILE }} python/
          cd ..
          echo "Layer zip size:"
          ls -lh ${{ env.LAYER_ZIP_FILE }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_SA_ROLE_ARN }}

      - name: Push layer to S3 and create layer
        run: |
          aws s3 cp ${{ env.LAYER_ZIP_FILE }} \
            s3://${{ vars.AWS_S3_BUCKET }}/${{ env.LAYER_ZIP_FILE }} \
            --region ${{ vars.AWS_REGION }}

          LAYER_VERSION=$(aws lambda publish-layer-version \
            --layer-name ${{ env.LAYER_NAME }} \
            --description "Utility Dependencies for AI Interview Questions Creator" \
            --content S3Bucket=${{ vars.AWS_S3_BUCKET }},S3Key=${{ env.LAYER_ZIP_FILE }} \
            --compatible-runtimes python3.9 \
            --region ${{ vars.AWS_REGION }} \
            --query 'Version' \
            --output text)
          
          echo "Created utils layer version: $LAYER_VERSION"
          
          # Get AWS Account ID
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
          
          # Store layer ARN for main workflow
          echo "UTILS_LAYER_ARN=arn:aws:lambda:${{ vars.AWS_REGION }}:${AWS_ACCOUNT_ID}:layer:${{ env.LAYER_NAME }}:$LAYER_VERSION" >> $GITHUB_ENV 