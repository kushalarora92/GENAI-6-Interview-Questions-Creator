name: Deploy to EC2

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'templates/**'
      - 'Dockerfile'

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  EC2_INSTANCE_ID: ${{ vars.EC2_INSTANCE_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_SA_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check EC2 Status
        run: |
          echo "Checking EC2 instance status..."
          aws ec2 describe-instance-status \
            --instance-ids ${{ env.EC2_INSTANCE_ID }} \
            --query 'InstanceStatuses[0].InstanceStatus.Status' \
            --output text

      - name: Build and save Docker image
        run: |
          docker build -t ai6-interview-questions:${{ github.sha }} .
          docker save ai6-interview-questions:${{ github.sha }} > image.tar
          echo "Docker image size: $(ls -lh image.tar)"

      - name: Copy files to S3
        run: |
          echo "Uploading files to S3..."
          aws s3 cp image.tar s3://${{ vars.AWS_S3_BUCKET }}/deploy/image.tar
          aws s3 cp deploy.sh s3://${{ vars.AWS_S3_BUCKET }}/deploy/deploy.sh
          
          # Verify files exist in S3
          aws s3 ls s3://${{ vars.AWS_S3_BUCKET }}/deploy/

      - name: Deploy using SSM
        id: ssm-deploy
        run: |
          echo "Starting deployment via SSM..."
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids ${{ env.EC2_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
              'cd /home/ec2-user',
              'aws s3 cp s3://${{ vars.AWS_S3_BUCKET }}/deploy/image.tar .',
              'aws s3 cp s3://${{ vars.AWS_S3_BUCKET }}/deploy/deploy.sh .',
              'chmod +x deploy.sh',
              'docker load < image.tar',
              './deploy.sh ${{ github.sha }}'
            ]" \
            --output text \
            --query "Command.CommandId")
          
          echo "Waiting for command completion..."
          aws ssm wait command-executed \
            --command-id "$COMMAND_ID" \
            --instance-id ${{ env.EC2_INSTANCE_ID }}
          
          # Get command output
          aws ssm get-command-invocation \
            --command-id "$COMMAND_ID" \
            --instance-id ${{ env.EC2_INSTANCE_ID }} \
            --output text \
            --query "StandardOutputContent"

      - name: Verify Deployment
        run: |
          echo "Checking if container is running..."
          aws ssm send-command \
            --instance-ids ${{ env.EC2_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=["docker ps | grep ai6-interview"]'

      - name: Cleanup S3
        if: always()
        run: |
          echo "Cleaning up S3 files..."
          aws s3 rm s3://${{ vars.AWS_S3_BUCKET }}/deploy/image.tar
          aws s3 rm s3://${{ vars.AWS_S3_BUCKET }}/deploy/deploy.sh 